From 6355aec3f505e6109b86c39a6c7ed31a6c0f19dc Mon Sep 17 00:00:00 2001
From: Joe Lawrence <joe.lawrence@redhat.com>
Date: Wed, 22 Nov 2023 14:59:55 -0500
Subject: [KPATCH CVE-2023-4623] kpatch fixes for CVE-2023-4623

Kernels:
5.14.0-362.8.1.el9_3


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-9/-/merge_requests/69
Approved-by: Yannick Cote (@ycote1)
Changes since last build:
[x86_64]:
af_unix.o: changed function: unix_stream_sendpage
ip_set_hash_netportnet.o: changed function: hash_netportnet4_uadt
ip_set_hash_netportnet.o: changed function: hash_netportnet6_uadt
sch_hfsc.o: changed function: hfsc_change_class
tcp.o: changed function: nvmet_tcp_handle_icreq
tcp.o: changed function: nvmet_tcp_io_work
tcp.o: changed function: nvmet_tcp_try_recv.constprop.0
tun.o: changed function: tun_napi_alloc_frags

[ppc64le]:
af_unix.o: changed function: unix_stream_sendpage
ip_set_hash_netportnet.o: changed function: hash_netportnet4_resize
ip_set_hash_netportnet.o: changed function: hash_netportnet4_uadt
ip_set_hash_netportnet.o: changed function: hash_netportnet4_uref
ip_set_hash_netportnet.o: changed function: hash_netportnet6_resize
ip_set_hash_netportnet.o: changed function: hash_netportnet6_uadt
ip_set_hash_netportnet.o: changed function: hash_netportnet6_uref
sch_hfsc.o: changed function: hfsc_change_class
tcp.o: changed function: nvmet_tcp_handle_icreq
tcp.o: changed function: nvmet_tcp_io_work
tcp.o: changed function: nvmet_tcp_try_recv.constprop.0
tun.o: changed function: tun_napi_alloc_frags

---------------------------

Modifications: none

commit 4a29caecdad8e2ee8aa085f0dec41f1eb9ec1e6f
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Thu Oct 19 12:04:30 2023 +0200

    net/sched: sch_hfsc: Ensure inner classes have fsc curve

    JIRA: https://issues.redhat.com/browse/RHEL-16893
    CVE: CVE-2023-4623
    Y-Commit: ff4452fb07f753147fb9146d447f07834adaa428

    O-JIRA: https://issues.redhat.com/projects/RHEL/issues/RHEL-14233
    Upstream Status: net.git commit b3d26c5702c7d6c45456326e56d2ccf3f103e60f

    commit b3d26c5702c7d6c45456326e56d2ccf3f103e60f
    Author: Budimir Markovic <markovicbudimir@gmail.com>
    Date:   Thu Aug 24 01:49:05 2023 -0700

        net/sched: sch_hfsc: Ensure inner classes have fsc curve

        HFSC assumes that inner classes have an fsc curve, but it is currently
        possible for classes without an fsc curve to become parents. This leads
        to bugs including a use-after-free.

        Don't allow non-root classes without HFSC_FSC to become parents.

        Fixes: 1da177e4c3f4 ("Linux-2.6.12-rc2")
        Reported-by: Budimir Markovic <markovicbudimir@gmail.com>
        Signed-off-by: Budimir Markovic <markovicbudimir@gmail.com>
        Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
        Link: https://lore.kernel.org/r/20230824084905.422-1-markovicbudimir@gmail.com
        Signed-off-by: Jakub Kicinski <kuba@kernel.org>

    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: Herton R. Krzesinski <herton@redhat.com>

commit 3919b4e40070e87363bb8314bc70218081a395ca
Author: Davide Caratti <dcaratti@redhat.com>
Date:   Thu Oct 19 12:04:30 2023 +0200

    net/sched: sch_hfsc: upgrade 'rt' to 'sc' when it becomes a inner curve

    JIRA: https://issues.redhat.com/browse/RHEL-16893
    CVE: CVE-2023-4623
    Y-Commit: 9950d4d93923bc110097fdf07ff405048d844923

    O-JIRA: https://issues.redhat.com/projects/RHEL/issues/RHEL-14233
    Upstream Status: net.git commit a13b67c9a015c4e21601ef9aa4ec9c5d972df1b4

    commit a13b67c9a015c4e21601ef9aa4ec9c5d972df1b4
    Author: Pedro Tammela <pctammela@mojatatu.com>
    Date:   Tue Oct 17 11:36:02 2023 -0300

        net/sched: sch_hfsc: upgrade 'rt' to 'sc' when it becomes a inner curve

        Christian Theune says:
           I upgraded from 6.1.38 to 6.1.55 this morning and it broke my traffic shaping script,
           leaving me with a non-functional uplink on a remote router.

        A 'rt' curve cannot be used as a inner curve (parent class), but we were
        allowing such configurations since the qdisc was introduced. Such
        configurations would trigger a UAF as Budimir explains:
           The parent will have vttree_insert() called on it in init_vf(),
           but will not have vttree_remove() called on it in update_vf()
           because it does not have the HFSC_FSC flag set.

        The qdisc always assumes that inner classes have the HFSC_FSC flag set.
        This is by design as it doesn't make sense 'qdisc wise' for an 'rt'
        curve to be an inner curve.

        Budimir's original patch disallows users to add classes with a 'rt'
        parent, but this is too strict as it breaks users that have been using
        'rt' as a inner class. Another approach, taken by this patch, is to
        upgrade the inner 'rt' into a 'sc', warning the user in the process.
        It avoids the UAF reported by Budimir while also being more permissive
        to bad scripts/users/code using 'rt' as a inner class.

        Users checking the `tc class ls [...]` or `tc class get [...]` dumps would
        observe the curve change and are potentially breaking with this change.

        v1->v2: https://lore.kernel.org/all/20231013151057.2611860-1-pctammela@mojatatu.com/
        - Correct 'Fixes' tag and merge with revert (Jakub)

        Cc: Christian Theune <ct@flyingcircus.io>
        Cc: Budimir Markovic <markovicbudimir@gmail.com>
        Fixes: b3d26c5702c7 ("net/sched: sch_hfsc: Ensure inner classes have fsc curve")
        Signed-off-by: Pedro Tammela <pctammela@mojatatu.com>
        Acked-by: Jamal Hadi Salim <jhs@mojatatu.com>
        Link: https://lore.kernel.org/r/20231017143602.3191556-1-pctammela@mojatatu.com
        Signed-off-by: Jakub Kicinski <kuba@kernel.org>

    Signed-off-by: Davide Caratti <dcaratti@redhat.com>
    Signed-off-by: Herton R. Krzesinski <herton@redhat.com>

Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
---
 net/sched/sch_hfsc.c | 14 ++++++++++++++
 1 file changed, 14 insertions(+)

diff --git a/net/sched/sch_hfsc.c b/net/sched/sch_hfsc.c
index 70b0c5873d32..54dddc2ff502 100644
--- a/net/sched/sch_hfsc.c
+++ b/net/sched/sch_hfsc.c
@@ -903,6 +903,14 @@ hfsc_change_usc(struct hfsc_class *cl, struct tc_service_curve *usc,
 	cl->cl_flags |= HFSC_USC;
 }
 
+static void
+hfsc_upgrade_rt(struct hfsc_class *cl)
+{
+	cl->cl_fsc = cl->cl_rsc;
+	rtsc_init(&cl->cl_virtual, &cl->cl_fsc, cl->cl_vt, cl->cl_total);
+	cl->cl_flags |= HFSC_FSC;
+}
+
 static const struct nla_policy hfsc_policy[TCA_HFSC_MAX + 1] = {
 	[TCA_HFSC_RSC]	= { .len = sizeof(struct tc_service_curve) },
 	[TCA_HFSC_FSC]	= { .len = sizeof(struct tc_service_curve) },
@@ -1062,6 +1070,12 @@ hfsc_change_class(struct Qdisc *sch, u32 classid, u32 parentid,
 	cl->cf_tree = RB_ROOT;
 
 	sch_tree_lock(sch);
+	/* Check if the inner class is a misconfigured 'rt' */
+	if (!(parent->cl_flags & HFSC_FSC) && parent != &q->root) {
+		NL_SET_ERR_MSG(extack,
+			       "Forced curve change on parent 'rt' to 'sc'");
+		hfsc_upgrade_rt(parent);
+	}
 	qdisc_class_hash_insert(&q->clhash, &cl->cl_common);
 	list_add_tail(&cl->siblings, &parent->children);
 	if (parent->level == 0)
-- 
2.43.0


