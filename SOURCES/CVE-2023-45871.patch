From ecb13b5d99ec29526abe7d42ba6473bff0dfcc5c Mon Sep 17 00:00:00 2001
From: Joe Lawrence <joe.lawrence@redhat.com>
Date: Wed, 22 Nov 2023 15:47:19 -0500
Subject: [KPATCH CVE-2023-45871] kpatch fixes for CVE-2023-45871

Kernels:
5.14.0-362.8.1.el9_3


Kpatch-MR: https://gitlab.com/redhat/prdsc/rhel/src/kpatch/rhel-9/-/merge_requests/72
Changes since last build:
[x86_64]:
fs_context.o: changed function: smb3_fs_context_parse_param
igb_main.o: changed function: igb_configure

[ppc64le]:
fs_context.o: changed function: smb3_fs_context_parse_param

---------------------------

Modifications: none

commit e06ac6574a38716706dbedb3541322bfcaae651a
Author: Wander Lairson Costa <wander@redhat.com>
Date:   Wed Nov 1 10:19:23 2023 -0300

    igb: set max size RX buffer when store bad packet is enabled

    JIRA: https://issues.redhat.com/browse/RHEL-15191
    JIRA: https://issues.redhat.com/browse/RHEL-15202
    CVE: CVE-2023-45871
    Y-Commit: 3892a9d407daa6714febd501b249d13406b4fb92

    O-JIRA: https://issues.redhat.com/browse/RHEL-15192
    O-CVE: CVE-2023-45871

    commit bb5ed01cd2428cd25b1c88a3a9cba87055eb289f
    Author: Radoslaw Tyl <radoslawx.tyl@intel.com>
    Date:   Thu Aug 24 13:46:19 2023 -0700

        igb: set max size RX buffer when store bad packet is enabled

        Increase the RX buffer size to 3K when the SBP bit is on. The size of
        the RX buffer determines the number of pages allocated which may not
        be sufficient for receive frames larger than the set MTU size.

        Cc: stable@vger.kernel.org
        Fixes: 89eaefb61dc9 ("igb: Support RX-ALL feature flag.")
        Reported-by: Manfred Rudigier <manfred.rudigier@omicronenergy.com>
        Signed-off-by: Radoslaw Tyl <radoslawx.tyl@intel.com>
        Tested-by: Arpana Arland <arpanax.arland@intel.com> (A Contingent worker at Intel)
        Signed-off-by: Tony Nguyen <anthony.l.nguyen@intel.com>
        Signed-off-by: David S. Miller <davem@davemloft.net>

    Signed-off-by: Wander Lairson Costa <wander@redhat.com>
    Signed-off-by: Herton R. Krzesinski <herton@redhat.com>

Signed-off-by: Joe Lawrence <joe.lawrence@redhat.com>
---
 drivers/net/ethernet/intel/igb/igb_main.c | 11 +++++++----
 1 file changed, 7 insertions(+), 4 deletions(-)

diff --git a/drivers/net/ethernet/intel/igb/igb_main.c b/drivers/net/ethernet/intel/igb/igb_main.c
index 278bc73f8de8..957f52abc9ba 100644
--- a/drivers/net/ethernet/intel/igb/igb_main.c
+++ b/drivers/net/ethernet/intel/igb/igb_main.c
@@ -4779,6 +4779,10 @@ void igb_configure_rx_ring(struct igb_adapter *adapter,
 static void igb_set_rx_buffer_len(struct igb_adapter *adapter,
 				  struct igb_ring *rx_ring)
 {
+#if (PAGE_SIZE < 8192)
+	struct e1000_hw *hw = &adapter->hw;
+#endif
+
 	/* set build_skb and buffer size flags */
 	clear_ring_build_skb_enabled(rx_ring);
 	clear_ring_uses_large_buffer(rx_ring);
@@ -4789,10 +4793,9 @@ static void igb_set_rx_buffer_len(struct igb_adapter *adapter,
 	set_ring_build_skb_enabled(rx_ring);
 
 #if (PAGE_SIZE < 8192)
-	if (adapter->max_frame_size <= IGB_MAX_FRAME_BUILD_SKB)
-		return;
-
-	set_ring_uses_large_buffer(rx_ring);
+	if (adapter->max_frame_size > IGB_MAX_FRAME_BUILD_SKB ||
+	    rd32(E1000_RCTL) & E1000_RCTL_SBP)
+		set_ring_uses_large_buffer(rx_ring);
 #endif
 }
 
-- 
2.42.0


